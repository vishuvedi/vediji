{"version":3,"sources":["logo.svg","header.js","container/Text.js","App.js","reportWebVitals.js","index.js"],"names":["header","props","className","mode","href","title","type","id","role","onClick","toggle","Htmlfor","value","Text","useState","text","setText","class","placeholder","onChange","event","target","for","newone","toUpperCase","toLowerCase","split","length","App","setdark","document","body","style","backgroundColor","color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"wNAAe,I,kBCGA,SAASA,EAAOC,GAE3B,OACI,mCAEG,qBAAKC,UAAS,yCAAqCD,EAAME,KAA3C,eAAsDF,EAAME,MAA1E,SACT,sBAAKD,UAAU,kBAAf,UACE,mBAAGA,UAAU,eAAeE,KAAK,IAAjC,SAAsCH,EAAMI,QAC5C,wBAAQH,UAAU,iBAAiBI,KAAK,SAAS,iBAAe,WAAW,iBAAe,0BAA0B,gBAAc,yBAAyB,gBAAc,QAAQ,aAAW,oBAA5L,SACE,sBAAMJ,UAAU,0BAElB,sBAAKA,UAAU,2BAA2BK,GAAG,yBAA7C,UACE,qBAAIL,UAAU,kCAAd,UACE,oBAAIA,UAAU,WAAd,SACE,mBAAGA,UAAU,kBAAkB,eAAa,OAAOE,KAAK,IAAxD,oBAEF,oBAAIF,UAAU,WAAd,SACE,mBAAGA,UAAU,WAAWE,KAAK,IAA7B,oBAaF,oBAAIF,UAAU,WAAd,SACE,mBAAGA,UAAU,oBAAb,2BAGJ,sBAAKA,UAAU,yBAAf,UACJ,uBAAOA,UAAU,mBAAmBI,KAAK,WAAWE,KAAK,SAASD,GAAG,yBAAyBE,QAAWR,EAAMS,SAC/G,uBAAOR,UAAU,mBAAmBS,QAAQ,yBAA5C,SAAuEV,EAAMW,qBCrChE,SAASC,EAAKZ,GAE7B,IAqCI,EAAyBa,mBAAS,IAAlC,mBAAOC,EAAP,KAAcC,EAAd,KAEA,OACI,qCAEA,0DACA,sBAAKd,UAAY,aAAjB,UACR,sBAAKe,MAAM,gBAAX,UACE,0BAAUA,MAAM,eAAeL,MAASG,EAAMG,YAAY,QAAQX,GAAG,mBAAmBY,SAZhF,SAACC,GACPJ,EAAQI,EAAMC,OAAOT,UAYvB,uBAAOU,IAAI,mBAAX,2BAEF,wBAAQpB,UAAY,kBAAkBO,QA3CtB,WACZ,IAAIc,EAASR,EAAKS,cAClBR,EAAQO,IAyCZ,yBACA,wBAAQrB,UAAY,uBAAuBO,QA7B1B,WAEb,IAAIc,EAASR,EAAKU,cAElBT,EAAQO,IAyBZ,wBACA,wBAAQrB,UAAY,uBAAuBO,QAvB5B,WAEXO,EADe,KAsBnB,wBAKA,sBAAKd,UAAY,YAAjB,UACI,0CACA,mCAAMa,EAAKW,MAAM,KAAKC,OAAO,EAA7B,cAA2CZ,EAAKY,OAAhD,WAAiE,uBACnE,2CACA,6BAAKZ,UC5BQa,MA9Bf,WACA,MAAwBd,mBAAS,SAAjC,mBAAMX,EAAN,KAAa0B,EAAb,KACIjB,EAAQ,SAmBV,OACE,qCACC,cAAC,EAAD,CAAQP,MAAM,eAAeF,KAAMA,EAAMO,OApB/B,WACH,UAATP,GAED0B,EAAQ,QACRC,SAASC,KAAKC,MAAMC,gBAAkB,QACtCH,SAASC,KAAKC,MAAME,MAAQ,QAC5BtB,EAAQ,eAIRiB,EAAQ,SACRC,SAASC,KAAKC,MAAMC,gBAAkB,QACtCH,SAASC,KAAKC,MAAME,MAAQ,QAC5BtB,EAAQ,cAOsDA,MAASA,IACzE,cAAC,EAAD,QCjBeuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFhB,SAASiB,eAAe,SAM1BZ,M","file":"static/js/main.dd9414b1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\nimport './header.css'\r\nimport Proptype from 'prop-types'\r\nexport default function header(props) {\r\n    \r\n    return (\r\n        <>\r\n           \r\n           <nav className= {`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"#\">Link</a>\r\n        </li>\r\n        {/* <li className=\"nav-item dropdown\">\r\n          <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n            Dropdown\r\n          </a>\r\n          <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n            <li><a className=\"dropdown-item\" href=\"#\">Action</a></li>\r\n            <li><a className=\"dropdown-item\" href=\"#\">Another action</a></li>\r\n            <li><hr className=\"dropdown-divider\"/></li>\r\n            <li><a className=\"dropdown-item\" href=\"#\">Something else here</a></li>\r\n          </ul>\r\n        </li> */}\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link disabled\">Disabled</a>\r\n        </li>\r\n      </ul>\r\n      <div className=\"form-check form-switch\">\r\n  <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" onClick = {props.toggle} />\r\n  <label className=\"form-check-label\" Htmlfor=\"flexSwitchCheckDefault\" >{props.value}</label>\r\n</div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n","import React , {useState} from 'react'\r\nimport Proptype from 'prop-types'\r\nexport default function Text(props) {\r\n\r\nlet mystyle ={\r\n    color :'black',\r\n    backgroundColor :'white'\r\n}\r\n\r\nconst listenh = () =>{\r\n    let newone = text.toUpperCase();\r\n    setText(newone)\r\n    \r\n}\r\n\r\nconst double = () =>{\r\n   let dell = mystyle;\r\n   if(mystyle.color == 'black'){\r\n    \r\n   }\r\n    \r\n}\r\n\r\n\r\nconst listenfh = () =>{\r\n\r\n    let newone = text.toLowerCase();\r\n    \r\n    setText(newone)\r\n    \r\n}\r\nconst colors = () =>{\r\n      let newone = ''\r\n    setText(newone)\r\n    \r\n}\r\n\r\nconst x = (event) =>{\r\n    setText(event.target.value)\r\n}\r\n\r\n    const [text , setText] = useState(\"\");\r\n \r\n    return (\r\n        <>\r\n\r\n        <h1> Welcome to FossilCounts</h1>\r\n        <div className = \"container \" >\r\n<div class=\"form-floating\">\r\n  <textarea class=\"form-control\" value = {text} placeholder=\"here \" id=\"floatingTextarea\" onChange = {x} ></textarea >\r\n  <label for=\"floatingTextarea\" >Write Here</label>\r\n</div>\r\n<button className = \"btn btn-primary\" onClick = {listenh}> Capitalize</button>\r\n<button className = \"btn btn-success ms-4\" onClick = {listenfh}> Lowecase </button>\r\n<button className = \"btn btn-success ms-4\" onClick = {colors}> Clear </button>\r\n\r\n        </div>\r\n\r\n\r\n<div className = \"container\"  >\r\n    <h1> Summary</h1>\r\n    <p1> {text.split(\" \").length-1} words and {text.length} char</p1><hr/>\r\n  <h2> Preview </h2>\r\n  <p1>{text}</p1>\r\n\r\n</div> \r\n        </>\r\n    )\r\n}\r\n\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Header from './header'\nimport React from './container/Text'\nimport { useState } from 'react';\nfunction App() {\nconst[mode , setdark] = useState('light');\nlet value = \"ON/OFF\";\n const toggle =()=> {\nif(mode === 'light')\n{\n  setdark('dark')\n  document.body.style.backgroundColor = 'black';\n  document.body.style.color = 'white';\n  value = \"Dark Mode \";\n}\nelse \n{\n  setdark('light')\n  document.body.style.backgroundColor = 'white';\n  document.body.style.color = 'black';\n  value = \"dark mode\";\n}\n\n }\n\n  return (\n    <>\n     <Header title=\"FossilCounts\" mode={mode} toggle = {toggle} value = {value} />\n<React/>\n\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}